// Code generated by MockGen. DO NOT EDIT.
// Source: activation.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entities "invoker/pkg/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockActivationWriter is a mock of ActivationWriter interface.
type MockActivationWriter struct {
	ctrl     *gomock.Controller
	recorder *MockActivationWriterMockRecorder
}

// MockActivationWriterMockRecorder is the mock recorder for MockActivationWriter.
type MockActivationWriterMockRecorder struct {
	mock *MockActivationWriter
}

// NewMockActivationWriter creates a new mock instance.
func NewMockActivationWriter(ctrl *gomock.Controller) *MockActivationWriter {
	mock := &MockActivationWriter{ctrl: ctrl}
	mock.recorder = &MockActivationWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockActivationWriter) EXPECT() *MockActivationWriterMockRecorder {
	return m.recorder
}

// WriteActivation mocks base method.
func (m *MockActivationWriter) WriteActivation(arg0 context.Context, arg1 *entities.Activation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteActivation", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteActivation indicates an expected call of WriteActivation.
func (mr *MockActivationWriterMockRecorder) WriteActivation(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteActivation", reflect.TypeOf((*MockActivationWriter)(nil).WriteActivation), arg0, arg1)
}
